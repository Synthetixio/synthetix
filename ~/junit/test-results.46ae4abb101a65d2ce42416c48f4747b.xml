<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="8.3790" tests="13" failures="0">
  <testsuite name="Root Suite" timestamp="2022-02-04T18:01:17" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Contract: AddressResolver" timestamp="2022-02-04T18:01:17" tests="0" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="importAddresses()" timestamp="2022-02-04T18:01:17" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0000" failures="0">
    <testcase name="Contract: AddressResolver importAddresses() can only be invoked by the owner" time="0.5810" classname="can only be invoked by the owner">
    </testcase>
  </testsuite>
  <testsuite name="when a different number of names are given to addresses" timestamp="2022-02-04T18:01:20" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0920" failures="0">
    <testcase name="Contract: AddressResolver importAddresses() when a different number of names are given to addresses then it reverts" time="0.0760" classname="then it reverts">
    </testcase>
  </testsuite>
  <testsuite name="when three separate addresses are given" timestamp="2022-02-04T18:01:20" tests="2" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0000" failures="0">
    <testcase name="Contract: AddressResolver importAddresses() when three separate addresses are given then it can verify the imported set of addresses" time="0.0320" classname="then it can verify the imported set of addresses">
    </testcase>
    <testcase name="Contract: AddressResolver importAddresses() when three separate addresses are given then each can be looked up in turn" time="0.0200" classname="then each can be looked up in turn">
    </testcase>
  </testsuite>
  <testsuite name="when two are overridden" timestamp="2022-02-04T18:01:21" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0720" failures="0">
    <testcase name="Contract: AddressResolver importAddresses() when three separate addresses are given when two are overridden then the first remains the same while the other two are updated" time="0.0190" classname="then the first remains the same while the other two are updated">
    </testcase>
  </testsuite>
  <testsuite name="getAddress()" timestamp="2022-02-04T18:01:21" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0000" failures="0">
    <testcase name="Contract: AddressResolver getAddress() when invoked with no entries, returns 0 address" time="0.0060" classname="when invoked with no entries, returns 0 address">
    </testcase>
  </testsuite>
  <testsuite name="when three separate addresses are given" timestamp="2022-02-04T18:01:21" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0460" failures="0">
    <testcase name="Contract: AddressResolver getAddress() when three separate addresses are given then getAddress returns the same as the public mapping" time="0.0120" classname="then getAddress returns the same as the public mapping">
    </testcase>
  </testsuite>
  <testsuite name="requireAndGetAddress()" timestamp="2022-02-04T18:01:21" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0000" failures="0">
    <testcase name="Contract: AddressResolver requireAndGetAddress() when invoked with no entries, reverts" time="0.0090" classname="when invoked with no entries, reverts">
    </testcase>
  </testsuite>
  <testsuite name="when three separate addresses are given" timestamp="2022-02-04T18:01:21" tests="2" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0910" failures="0">
    <testcase name="Contract: AddressResolver requireAndGetAddress() when three separate addresses are given then requireAndGetAddress() returns the same as the public mapping" time="0.0160" classname="then requireAndGetAddress() returns the same as the public mapping">
    </testcase>
    <testcase name="Contract: AddressResolver requireAndGetAddress() when three separate addresses are given when invoked with an unknown entry, reverts" time="0.0070" classname="when invoked with an unknown entry, reverts">
    </testcase>
  </testsuite>
  <testsuite name="rebuildCaches()" timestamp="2022-02-04T18:01:21" tests="0" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="when some MixinResolver contracts exist" timestamp="2022-02-04T18:01:21" tests="0" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="when some of these contracts are imported and caches are rebuilt" timestamp="2022-02-04T18:01:21" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.1440" failures="0">
    <testcase name="Contract: AddressResolver rebuildCaches() when some MixinResolver contracts exist when some of these contracts are imported and caches are rebuilt shows that rebuildCache() was called on imported addresses" time="0.0010" classname="shows that rebuildCache() was called on imported addresses">
    </testcase>
  </testsuite>
  <testsuite name="getSynth()" timestamp="2022-02-04T18:01:21" tests="0" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="when a mock for Issuer is added" timestamp="2022-02-04T18:01:21" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="0.1300" failures="0">
    <testcase name="Contract: AddressResolver getSynth() when a mock for Issuer is added when getSynth() is invoked" time="0.0170" classname="when getSynth() is invoked">
    </testcase>
  </testsuite>
  <testsuite name="when a Synthetix is created with a few added synths" timestamp="2022-02-04T18:01:21" tests="1" file="/Users/noahlitvin/Development/web3/synthetix/test/contracts/AddressResolver" time="3.8730" failures="0">
    <testcase name="Contract: AddressResolver getSynth() when a Synthetix is created with a few added synths when getSynth() is invoked with these synth keys, they are returned correctly" time="0.0170" classname="when getSynth() is invoked with these synth keys, they are returned correctly">
    </testcase>
  </testsuite>
</testsuites>