commands:
    etherscan_check:
        description: Run etherscan ABI check
        parameters:
            network:
                type: string
        steps:
            - run: npm run test:etherscan --  --network << parameters.network >>
    fork_deploy:
        description: Performs a deployment using a fork
        parameters:
            network:
                type: string
        steps:
            - fork_start:
                network: << parameters.network >>
                reset: true
            - run: node publish deploy --use-fork --yes --network << parameters.network >>
            - persist_to_workspace:
                paths:
                    - publish/deployed
                    - .db
                root: .
    fork_prepare_deploy:
        description: Prepares contract artifacts and deployed/<network>/config.json for a deployment using a fork based on releases.json
        parameters:
            network:
                type: string
        steps:
            - run: node publish build
            - run: node publish prepare-deploy --network << parameters.network >>
            - persist_to_workspace:
                paths:
                    - build
                    - publish/deployed
                root: .
    fork_start:
        description: Starts a local ganache fork on the specified network
        parameters:
            network:
                type: string
            reset:
                default: false
                type: boolean
        steps:
            - run:
                background: true
                command: node publish fork --network << parameters.network >> <<# parameters.reset >> --reset <</ parameters.reset >>
            - wait_for_rpc
    fork_test_prod:
        description: Runs prod tests on a fork
        parameters:
            network:
                type: string
        steps:
            - fork_start:
                network: << parameters.network >>
                reset: true
            - run: npm run test:prod:gas
    testnet_pvt:
        description: Run testnet PVT
        parameters:
            network:
                type: string
        steps:
            - run: npm run test:testnet --  --yes --network << parameters.network >>
    wait_for_rpc:
        description: Wait until a connection is established with http://localhost:8545
        steps:
            - run: sleep 5
            - run:
                command: |
                    wget --retry-connrefused --waitretry=1 --read-timeout=120 --timeout=120 -t 100 http://localhost:8545
                    :
                shell: /bin/sh
jobs:
  prepare:
    <<: *env_defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'v2-dependencies-{{ checksum "package-lock.json" }}'
      - run: npm install
      - save_cache:
          key: 'v2-dependencies-{{ checksum "package-lock.json" }}'
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  fork-prepare-deploy:
    <<: *env_defaults
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - fork_prepare_deploy:
          network: << parameters.network >>

  fork-deploy:
    <<: *env_defaults
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - fork_deploy:
          network: << parameters.network >>

  fork-test-prod:
    <<: *env_defaults
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - fork_test_prod:
          network: << parameters.network >>

  lint:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run lint

  test-contracts:
    <<: *env_defaults
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npx buidler compile --showsize --optimizer
      - run:
          name: Test and output gas used
          command: |
            set +e
            npm test
            EXIT_CODE=$?
            cat test-gas-used.log
            printf "\\n"
            exit $EXIT_CODE

  test-contracts-legacy:
    <<: *env_defaults
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run compile:legacy
      - run: npx buidler test:legacy

  test-ovm:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Compile in OVM, enforcing size limit
          command: |
            npx buidler compile --ovm --optimizer --showsize

  test-publish:
    <<: *env_defaults
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test and output logs
          command: |
            set +e
            npm run test:publish
            EXIT_CODE=$?
            if [ $EXIT_CODE -gt 0 ]; then
              tail -n 2000 test/publish/test.log; # show tail of logs here if test failed
            fi
            npx ansi-to-html --newline --bg black test/publish/test.log > test/publish/test-log.html
            exit $EXIT_CODE
      - store_artifacts:
          path: test/publish/test-log.html
          destination: test-log.html

  test-deployments:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:deployments

  test-local:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:local

  coverage-report:
    <<: *env_defaults
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: NODE_OPTIONS=--max_old_space_size=4096 npm run coverage
      - run: bash <(curl -s https://codecov.io/bash)

  pack:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run pack
      - store_artifacts:
          path: browser.js

  gas-report:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:gas && npx codechecks

  test-kovan:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - testnet_pvt:
          network: kovan
      - etherscan_check:
          network: kovan

  test-rinkeby:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - testnet_pvt:
          network: rinkeby
      - etherscan_check:
          network: rinkeby

  # Ropsten paused (see above).
  # test-ropsten:
  #   <<: *env_defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: .
  #     - testnet_pvt:
  #         network: ropsten
  #     - etherscan_check:
  #         network: ropsten

  test-mainnet:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      # - run: No PVT for mainnet just yet
      - etherscan_check:
          network: mainnet

  slither:
    docker:
      - image: trailofbits/eth-security-toolbox
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Show Slither output
          # ignore slither error codes
          command: |
            set +e
            slither .
            exit 0

workflows:
    dev:
        jobs:
            - prepare
      - test-ovm:
          requires:
            - prepare
      - test-publish:
          requires:
            - prepare
      - test-deployments:
          requires:
            - prepare
      - test-local:
          requires:
            - prepare
      - pack:
          requires:
            - prepare
      # - coverage-report:
      #     requires:
      #       - prepare
      - gas-report:
          requires:
            - prepare
      - slither:
          requires:
            - prepare
      # ~~~~~~~~~~~~~~~ KOVAN ~~~~~~~~~~~~~~~ #
      - test-kovan:
          requires:
            - prepare
          filters:
            branches:
              only: staging
      # ~~~~~~~~~~~~~~~ RINKEBY ~~~~~~~~~~~~~~~ #
      - test-rinkeby:
          requires:
            - prepare
          filters:
            branches:
              only: staging
      # ~~~~~~~~~~~~~~~ MAINNET ~~~~~~~~~~~~~~~ #
      - test-mainnet:
          requires:
            - prepare
          filters:
            branches:
              only: master
      # ~~~~~~~~~~~~~~~ ROPSTEN ~~~~~~~~~~~~~~~ #
      # Ropsten paused (see above).
