# Below is the configuration of the CI build
env_defaults: &env_defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12.18

version: 2.1
commands:
  testnet_pvt:
    description: Run testnet PVT
    parameters:
      network:
        type: string
    steps:
      - run: npm run test:testnet --  --yes --network << parameters.network >>

  etherscan_check:
    description: Run etherscan ABI check
    parameters:
      network:
        type: string
    steps:
      - run: npm run test:etherscan --  --network << parameters.network >>

  wait_for_rpc:
    description: Wait until a connection is established with http://localhost:8545
    steps:
      - run: sleep 5
      - run:
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=1 --read-timeout=120 --timeout=120 -t 100 http://localhost:8545
            :

  fork_start:
    description: Starts a local ganache fork on the specified network
    parameters:
      network:
        type: string
      reset:
        type: boolean
        default: false
    steps:
      - run:
          command: node publish fork --network << parameters.network >> <<# parameters.reset >> --reset <</ parameters.reset >>
          background: true
      - wait_for_rpc

  fork_prepare_deploy:
    description: Prepares contract artifacts and deployed/<network>/config.json for a deployment using a fork
    parameters:
      network:
        type: string
    steps:
      - run: node publish build
      - run: node publish prepare-deploy --network << parameters.network >>
      - persist_to_workspace:
          root: .
          paths:
            - build
            - publish/deployed

  fork_deploy:
    description: Performs a deployment using a fork
    parameters:
      network:
        type: string
    steps:
      - fork_start:
          network: << parameters.network >>
          reset: true
      - run: node publish deploy --use-fork --yes --network << parameters.network >>
      - persist_to_workspace:
          root: .
          paths:
            - publish/deployed
            - .db

  fork_test_testnet:
    description: Runs testnet tests on a fork
    parameters:
      network:
        type: string
    steps:
      - fork_start:
          network: << parameters.network >>
      - run: node publish import-fee-periods --use-fork --yes --network << parameters.network >>
      - run: node test/testnet --use-fork --yes --network << parameters.network >>

  fork_test_prod:
    description: Runs prod tests on a fork
    parameters:
      network:
        type: string
    steps:
      - fork_start:
          network: << parameters.network >>
          reset: true
      - run: npm run test:prod

jobs:
  prepare:
    <<: *env_defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'v2-dependencies-{{ checksum "package-lock.json" }}'
            - v2-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: 'v2-dependencies-{{ checksum "package-lock.json" }}'
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  fork-prepare-deploy:
    <<: *env_defaults
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - fork_prepare_deploy:
          network: << parameters.network >>

  fork-deploy:
    <<: *env_defaults
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - fork_deploy:
          network: << parameters.network >>

  fork-test-testnet:
    <<: *env_defaults
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - fork_test_testnet:
          network: << parameters.network >>

  fork-test-prod:
    <<: *env_defaults
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - fork_test_prod:
          network: << parameters.network >>

  lint:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run lint

  test-contracts:
    <<: *env_defaults
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npx buidler compile --showsize --optimizer
      - run:
          name: Test and output gas used
          command: |
            set +e
            npm test
            EXIT_CODE=$?
            cat test-gas-used.log
            printf "\\n"
            exit $EXIT_CODE

  test-contracts-legacy:
    <<: *env_defaults
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run compile:legacy
      - run: npx buidler test:legacy

  test-publish:
    <<: *env_defaults
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test and output logs
          command: |
            set +e
            npm run test:publish
            EXIT_CODE=$?
            if [ $EXIT_CODE -gt 0 ]; then
              tail -n 2000 test/publish/test.log; # show tail of logs here if test failed
            fi
            npx ansi-to-html --newline --bg black test/publish/test.log > test/publish/test-log.html
            exit $EXIT_CODE
      - store_artifacts:
          path: test/publish/test-log.html
          destination: test-log.html

  test-deployments:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:deployments

  test-local:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:local

  coverage-report:
    <<: *env_defaults
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: NODE_OPTIONS=--max_old_space_size=4096 npm run coverage
      - run: bash <(curl -s https://codecov.io/bash)

  pack:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run pack
      - store_artifacts:
          path: browser.js

  gas-report:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:gas && npx codechecks

  test-kovan:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - testnet_pvt:
          network: kovan
      - etherscan_check:
          network: kovan

  test-rinkeby:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - testnet_pvt:
          network: rinkeby
      - etherscan_check:
          network: rinkeby

  # on pause due to ropsten issues (see below)
  # test-ropsten:
  #   <<: *env_defaults
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: .
  #     - testnet_pvt:
  #         network: ropsten
  #     - etherscan_check:
  #         network: ropsten

  test-mainnet:
    <<: *env_defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      # - run: No PVT for mainnet just yet
      - etherscan_check:
          network: mainnet

  slither:
    docker:
      - image: trailofbits/eth-security-toolbox
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Show Slither output
          # ignore slither error codes
          command: |
            set +e
            slither .
            exit 0

workflows:
  version: 2
  fork-prod-tests:
    jobs:
      - prepare
      - fork-test-prod:
          name: fork-test-prod-mainnet
          network: mainnet
          requires:
            - prepare
  fork-deploy:
    jobs:
      - prepare:
          filters:
            branches:
              only: develop
      - fork-prepare-deploy:
          name: fork-prepare-deploy-mainnet
          network: mainnet
          requires:
            - prepare
          filters:
            branches:
              only: develop
      - fork-deploy:
          name: fork-deploy-mainnet
          network: mainnet
          requires:
            - fork-prepare-deploy-mainnet
          filters:
            branches:
              only: develop
      - fork-test-testnet:
          name: fork-test-testnet-mainnet
          network: mainnet
          requires:
            - fork-deploy-mainnet
          filters:
            branches:
              only: develop
      - fork-prepare-deploy:
          name: fork-prepare-deploy-kovan
          network: kovan
          requires:
            - prepare
          filters:
            branches:
              only: develop
      - fork-deploy:
          name: fork-deploy-kovan
          network: kovan
          requires:
            - fork-prepare-deploy-kovan
          filters:
            branches:
              only: develop
      - fork-test-testnet:
          name: fork-test-testnet-kovan
          network: kovan
          requires:
            - fork-deploy-kovan
          filters:
            branches:
              only: develop

      # this has been put on pause while Ropsten is down due to issues with Chainlink
      # feeds and the massive reorg on Mon Sept 31, 2020
      # - fork-prepare-deploy:
      #     name: fork-prepare-deploy-ropsten
      #     network: ropsten
      #     requires:
      #       - prepare
      #     filters:
      #       branches:
      #         only: develop
      # - fork-deploy:
      #     name: fork-deploy-ropsten
      #     network: ropsten
      #     requires:
      #       - fork-prepare-deploy-ropsten
      #     filters:
      #       branches:
      #         only: develop
      # - fork-test-testnet:
      #     name: fork-test-testnet-ropsten
      #     network: ropsten
      #     requires:
      #       - fork-deploy-ropsten
      #     filters:
      #       branches:
      #         only: develop

      - fork-prepare-deploy:
          name: fork-prepare-deploy-rinkeby
          network: rinkeby
          requires:
            - prepare
          filters:
            branches:
              only: develop
      - fork-deploy:
          name: fork-deploy-rinkeby
          network: rinkeby
          requires:
            - fork-prepare-deploy-rinkeby
          filters:
            branches:
              only: develop
      - fork-test-testnet:
          name: fork-test-testnet-rinkeby
          network: rinkeby
          requires:
            - fork-deploy-rinkeby
          filters:
            branches:
              only: develop
  dev:
    jobs:
      - prepare
      - lint:
          requires:
            - prepare
      - test-contracts:
          requires:
            - prepare
      - test-contracts-legacy:
          requires:
            - prepare
      - test-publish:
          requires:
            - prepare
      - test-deployments:
          requires:
            - prepare
      - test-local:
          requires:
            - prepare
      - pack:
          requires:
            - prepare
      - coverage-report:
          requires:
            - prepare
      - gas-report:
          requires:
            - prepare
      - test-kovan:
          requires:
            - prepare
          filters:
            branches:
              only: staging
      - test-rinkeby:
          requires:
            - prepare
          filters:
            branches:
              only: staging

      # on pause due to ropsten issues (see below)
      # - test-ropsten:
      #     requires:
      #       - prepare
      #     filters:
      #       branches:
      #         only: staging

      - test-mainnet:
          requires:
            - prepare
          filters:
            branches:
              only: master
      - slither:
          requires:
            - prepare
