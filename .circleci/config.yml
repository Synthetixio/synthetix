version: 2.1
commands:
  cmd-wait-for-port:
    parameters:
      port:
        type: integer
    steps:
      - run: sleep 5
      - run:
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=1 --read-timeout=120 --timeout=120 -t 100 http://localhost:<<parameters.port>>
            :
jobs:
  job-compile:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npx hardhat compile --optimizer --fail-oversize
      - run: rm -rf build # force a clean build
      - run: npx hardhat compile --use-ovm --optimizer --fail-oversize
  job-lint:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run lint
  job-pack-browser:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run pack
      - store_artifacts:
          path: browser.js
  job-prepare:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: v4-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  job-prod-diff-tests-local-ovm:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: node publish build --test-helpers
      - run: npx hardhat compile --force
      - run:
          command: npx hardhat node
          background: true
      - cmd-wait-for-port:
          port: 8545
      - run: node publish deploy --network local --fresh-deploy --yes --use-ovm --ignore-safety-checks --ignore-custom-parameters --deployment-path ./publish/deployed/local-ovm
      - run: npm run test:prod -- --no-compile --use-ovm --patch-fresh-deployment --deployment-path ./publish/deployed/local-ovm
  job-prod-diff-tests-local:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: node publish build --test-helpers
      - run:
          command: npx hardhat node
          background: true
      - cmd-wait-for-port:
          port: 8545
      - run: node publish deploy --network local --fresh-deploy --yes
      - run: npm run test:prod -- --patch-fresh-deployment
  job-prod-diff-tests:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: node publish build
      - run:
          command: npx hardhat node --target-network mainnet
          background: true
      - cmd-wait-for-port:
          port: 8545
      - run: node publish prepare-deploy --network mainnet
      - run: node publish deploy --ignore-safety-checks --add-new-synths --use-fork --yes --network mainnet
      - run: npm run test:prod:gas -- --target-network mainnet --patch-fresh-deployment
      - run: npx codechecks codechecks.prod.yml
      - store_artifacts:
          path: test-gas-used-prod.log
  job-prod-tests-ovm:
    working_directory: ~/repo
    machine:
      image: ubuntu-2004:202010-01
      docker_layer_caching: true
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: echo Disabled until ops tool is fixed by Optimism
  job-prod-tests:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          command: npx hardhat node --target-network mainnet
          background: true
      - cmd-wait-for-port:
          port: 8545
      - run: npm run test:prod:gas -- --target-network mainnet
      - run: npx codechecks codechecks.prod.yml
      - store_artifacts:
          path: test-gas-used-prod.log
  job-static-analysis:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Show Slither output
          command: |
            set +e
            slither .
            exit 0
  job-test-deploy-script:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test and output logs
          command: |
            set +e
            npm run test:publish
            EXIT_CODE=$?
            if [ $EXIT_CODE -gt 0 ]; then
              tail -n 2000 test/publish/test.log; # show tail of logs here if test failed
            fi
            npx ansi-to-html --newline --bg black test/publish/test.log > test/publish/test-log.html
            exit $EXIT_CODE
      - store_artifacts:
          path: test/publish/test-log.html
          destination: test-log.html
  job-unit-tests-coverage:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: NODE_OPTIONS=--max_old_space_size=4096 npm run coverage
      - run: bash <(curl -s https://codecov.io/bash)
  job-unit-tests-gas-report:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:gas
      - run: npx codechecks codechecks.unit.yml
      - store_artifacts:
          path: test-gas-used.log
  job-unit-tests:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    resource_class: large
    parallelism: 8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npx hardhat compile --showsize --optimizer
      - run:
          name: Test and output gas used
          command: |
            set +e
            circleci tests glob 'test/contracts/*.js' |
            circleci tests split |
            xargs npm test
            EXIT_CODE=$?
            cat test-gas-used.log
            printf "\\n"
            exit $EXIT_CODE
  job-validate-deployments:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:deployments
  job-validate-etherscan:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.16-focal
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:etherscan --  --network << parameters.network >>
workflows:
  workflow-all:
    jobs:
      - job-prepare
      - job-lint:
          requires:
            - job-prepare
      - job-compile:
          requires:
            - job-prepare
      - job-static-analysis:
          requires:
            - job-prepare
      - job-unit-tests:
          requires:
            - job-prepare
      - job-unit-tests-coverage:
          requires:
            - job-prepare
      - job-unit-tests-gas-report:
          requires:
            - job-prepare
      - job-test-deploy-script:
          requires:
            - job-prepare
      - job-prod-tests:
          requires:
            - job-prepare
      - job-prod-tests-ovm:
          name: job-prod-tests-ovm
          requires:
            - job-prepare
      - job-prod-diff-tests-local:
          name: job-prod-diff-tests-local
          requires:
            - job-prepare
      - job-prod-diff-tests-local-ovm:
          name: job-prod-diff-tests-local-ovm
          requires:
            - job-prepare
      - job-prod-diff-tests:
          name: job-prod-diff-tests-mainnet
          requires:
            - job-prepare
      - job-pack-browser:
          requires:
            - job-prepare
      - job-validate-deployments:
          requires:
            - job-prepare
