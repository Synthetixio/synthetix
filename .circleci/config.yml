version: 2.1
commands:
  cmd-wait-for-port:
    parameters:
      port:
        type: integer
    steps:
      - run:
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=1 --read-timeout=120 --timeout=120 -t 300 http://localhost:<<parameters.port>>
            :
jobs:
  job-audit:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-sec-tools:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - run:
          name: Audit dependencies
          command: |
            npm audit --audit-level=critical
      - run:
          name: Lint lockfile
          command: |
            lockfile-lint -p package-lock.json --type npm --allowed-hosts npm github.com --allowed-schemes "https:" "git+ssh:"
  job-compile:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npx hardhat compile --optimizer --fail-oversize
      - run: rm -rf build # force a clean build
      - run: npx hardhat compile --use-ovm --optimizer --fail-oversize
  job-fork-tests:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          command: npm run fork:mainnet
          background: true
      - cmd-wait-for-port:
          port: 8545
      - run:
          name: Run integration tests on l1
          command: |
            NEW_CONTRACTS=$(node bin.js sips --layer=base --unreleased --with-sources)
            if [ -z "$NEW_CONTRACTS" ]; then
              npx hardhat test:integration:l1 --use-fork
            else
              npx hardhat test:integration:l1 --compile --deploy --use-sips --use-fork
            fi;
  job-integration-tests:
    working_directory: ~/repo
    machine:
      image: ubuntu-2004:202107-02
      docker_layer_caching: true
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v6-optimism-build-
      - run:
          name: Build docker containers if necessary
          command: |
            if [ ! -d ./optimism ]; then
              npx hardhat ops --fresh --build --build-ops
            fi;
      - save_cache:
          key: v6-optimism-build-
          paths:
            - ./optimism
      - run:
          name: Start docker chains
          background: true
          command: |
            docker --version
            npx hardhat ops --start
      - cmd-wait-for-port:
          port: 8545
      - cmd-wait-for-port:
          port: 9545
      - run:
          name: Run isolated layer 1 integration tests
          command: |
            npx hardhat test:integration:l1 --compile --deploy --provider-port 9545
      - run:
          name: Run isolated layer 2 integration tests
          command: |
            npx hardhat test:integration:l2 --compile --deploy
      - run:
          name: Run dual layer 1 and layer 2 integration tests
          command: |
            npx hardhat test:integration:dual --deploy
  job-lint:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run lint
  job-pack-browser:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run pack
      - store_artifacts:
          path: browser.js
  job-prepare:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Set custom npm cache directory
          command: npm config set cache .npm-cache --global
      - run:
          name: Install dependencies
          command: npm install --prefer-offline --no-audit
      - save_cache:
          key: v4-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - .npm-cache
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - .npm-cache
  job-simulate-release:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          command: npm run fork:mainnet
          background: true
      - cmd-wait-for-port:
          port: 8545
      - run:
          name: Simulate release on L1 fork
          command: |
            UPCOMING_RELEASE=$(node bin.js releases --layer=base --unreleased --with-sources --name-only)
            if [ ! -z "$UPCOMING_RELEASE" ]; then
              npx hardhat simulate:migration --release "$UPCOMING_RELEASE" --generate --test
            fi;
  job-static-analysis:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Show Slither output
          command: |
            set +e
            slither .
            exit 0
  job-test-deploy-script:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test and output logs
          command: |
            set +e
            npm run test:publish
            EXIT_CODE=$?
            if [ $EXIT_CODE -gt 0 ]; then
              tail -n 2000 test/publish/test.log; # show tail of logs here if test failed
            fi
            npx ansi-to-html --newline --bg black test/publish/test.log > test/publish/test-log.html
            exit $EXIT_CODE
      - store_artifacts:
          path: test/publish/test-log.html
          destination: test-log.html
  job-unit-tests-coverage-report:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-sec-tools:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/coverage
      - run:
          name: Upload coverage
          command: |
            cp -R /tmp/coverage/coverage-*.json .
            codecov -t $CODECOV_TOKEN
  job-unit-tests-coverage:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    resource_class: large
    parallelism: 8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Create shared coverage outputs folder
          command: mkdir -p /tmp/coverage
      - run:
          name: Coverage
          command: |
            TEST_FILES="{$(circleci tests glob "test/contracts/*.js" | \
              circleci tests split --split-by=timings | xargs | sed -e 's/ /,/g')}"
            npm run coverage -- --testfiles "$TEST_FILES"
      - run:
          name: Save coverage
          command: |
            cp coverage.json /tmp/coverage/coverage-$CIRCLE_NODE_INDEX.json
      - persist_to_workspace:
          root: /tmp/coverage
          paths:
            - coverage-*.json
  job-unit-tests-gas-report:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Upload gas reports
          command: |
            npx hardhat test:merge-gas-reports gasReporterOutput-*.json
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              git branch -f master origin/master
            fi
            npx codechecks codechecks.unit.yml
      - store_artifacts:
          path: gasReporterOutput.json
  job-unit-tests:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    resource_class: large
    parallelism: 8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npx hardhat compile --showsize --optimizer
      - run:
          name: Test and output gas used
          command: |
            set +e
            circleci tests glob 'test/contracts/*.js' |
            circleci tests split |
            xargs npm test -- --gas
            EXIT_CODE=$?
            printf "\\n"
            exit $EXIT_CODE
      - run:
          name: Save gas report
          command: |
            mv gasReporterOutput.json ./gasReporterOutput-$CIRCLE_NODE_INDEX.json
      - persist_to_workspace:
          root: .
          paths:
            - gasReporterOutput-*.json
  job-validate-deployments:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Only run when publish/deployed/*/deployment.json changes
          command: |
            changes=$(git diff --name-status origin/develop | grep 'publish\/deployed\/[a-z0-9\-]*\/deployment\.json$' || true)
            if [ -z "$changes" ]; then
              circleci-agent step halt
            fi;
      - run: npm run test:deployments
  job-validate-etherscan:
    working_directory: ~/repo
    docker:
      - image: synthetixio/docker-node:14.17-ubuntu
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    parameters:
      network:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:etherscan --  --network << parameters.network >>
workflows:
  workflow-all:
    jobs:
      - job-audit
      - job-prepare:
          requires:
            - job-audit
      - job-lint:
          requires:
            - job-prepare
      - job-compile:
          requires:
            - job-prepare
      - job-static-analysis:
          requires:
            - job-prepare
      - job-unit-tests:
          requires:
            - job-prepare
      - job-unit-tests-coverage:
          requires:
            - job-prepare
      - job-unit-tests-coverage-report:
          requires:
            - job-prepare
            - job-unit-tests-coverage
      - job-unit-tests-gas-report:
          requires:
            - job-prepare
            - job-unit-tests
      - job-test-deploy-script:
          requires:
            - job-prepare
      - job-fork-tests:
          requires:
            - job-prepare
      - job-simulate-release:
          requires:
            - job-prepare
      - job-integration-tests:
          name: job-integration-tests
          requires:
            - job-prepare
      - job-pack-browser:
          requires:
            - job-prepare
      - job-validate-deployments:
          requires:
            - job-prepare
